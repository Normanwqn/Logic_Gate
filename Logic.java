import java.util.Scanner;
public class Logic {
	Boolean result = false;
	String inputtype;
	Boolean a,b;
	
	public static void main(String[] args){
		Logic construct = new Logic();
		Scanner inp = new Scanner(System.in);
		//Explanation
		System.out.println("This programme is intended to demostrate how logic gate works.");
		System.out.println("Pleaes select the type of gate you desire. (AND, OR, NOT, NAND, NOR, XOR and XNOR)");
		construct.inputtype = inp.nextLine();
		//https://stackoverflow.com/questions/513832/how-do-i-compare-strings-in-java
		if (! construct.inputtype.equals("NOT"))
		{
			System.out.println("Please input the value of the first Boolean variable");
			construct.a = inp.nextBoolean();
			System.out.println("Please input the value of the second Boolean variable");
			construct.b = inp.nextBoolean();
			construct.select(construct.inputtype);
		} else {
			System.out.println("Please input the value of the Boolean variable");
			System.out.println("The output generated by the NOT gate is " + ! inp.nextBoolean() + ".");
			System.out.println("Here is the truth table for the NOT gate.");
			for (int i = 0; i<=1; i++){
				System.out.println((i+1)+ ". !"+ construct.convert(i) + ": " + ! construct.convert(i));
			}
			System.exit(0);
		}
	
		inp.close();
		
	}
	public Boolean XOR(Boolean a, Boolean b){
		Boolean result;
		if ((a == true) && (b == true)){
			result = false;
		} else {
			result = (a || b);
		}
		return result;
	}
	public Boolean XNOR(Boolean a, Boolean b){
		Boolean result;
		if (a) {
		 if (b){
			 result = true;
		 } else{
			 result = false;
		 }
		} else{
			if (b){
				result = false;
			} else {
				result = true;
			}
		}
		return result;
	}
	public Boolean convert(int a){
		Boolean result = false;
		if (a == 0){
			result = false;
		} else if (a == 1){
			result = true;
		}
		return result;
	}
	public void select(String type){
		switch (inputtype){
		case "OR": 
			System.out.println("The output generated by the OR gate is "+ (a || b) + ".");
			System.out.println("Here is the truth table for the " + inputtype +" gate.");
			for (int i = 0; i<= 1; i++){
				for (int j = 0; j <= 1; j++){
					System.out.println( ((i+1)*2+(j)-1)+ ". "+ convert(i) + " " + inputtype + " "+ convert(j) + ": " + (convert(i) || convert(j)) + ".");
				}
			}
			break;
		case "AND": 
			System.out.println("The output generated by the AND gate is "+ (a && b) + ".");
			System.out.println("Here is the truth table for the " + inputtype +" gate.");
			for (int i = 0; i<= 1; i++){
				for (int j = 0; j <= 1; j++){
					System.out.println( ((i+1)*2+(j)-1)+ ". "+ convert(i) + " " + inputtype + " "+ convert(j) + ": " + (convert(i) && convert(j)) + ".");
				}
			}
			break;
		case "NAND": 
			System.out.println("The output generated by the NAND gate is "+ ! (a && b) +".");
			System.out.println("Here is the truth table for the " + inputtype +" gate.");
			for (int i = 0; i<= 1; i++){
				for (int j = 0; j <= 1; j++){
					System.out.println( ((i+1)*2+(j)-1)+ ". "+ convert(i) + " " + inputtype + " "+ convert(j) + ": " + !(convert(i) && convert(j)) + ".");
				}
			}
			break;
		case "XOR":
			System.out.println("The output generated by the XOR gate is " + XOR(a, b) + ".");
			System.out.println("Here is the truth table for the " + inputtype +" gate.");
			for (int i = 0; i<= 1; i++){
				for (int j = 0; j <= 1; j++){
					System.out.println( ((i+1)*2+(j)-1)+ ". "+ convert(i) + " " + inputtype + " "+ convert(j) + ": " + XOR(convert(i),convert(j)) + ".");
				}
			}
			break;
		case "XNOR":
			System.out.println("The output generated by the XNOR gate is " + XNOR(a, b) + ".");
			System.out.println("Here is the truth table for the " + inputtype +" gate.");
			for (int i = 0; i<= 1; i++){
				for (int j = 0; j <= 1; j++){
					System.out.println( ((i+1)*2+(j)-1)+ ". "+ convert(i) + " " + inputtype + " "+ convert(j) + ": " + XNOR(convert(i),convert(j)) + ".");
				}
			}
			break;
		case "NOR":
			System.out.println("The output generated by the NOR gate is " + NOR(a, b) + ".");
			for (int i = 0; i<= 1; i++){
				for (int j = 0; j <= 1; j++){
					System.out.println( ((i+1)*2+(j)-1)+ ". "+ convert(i) + " " + inputtype + " "+ convert(j) + ": " + NOR(convert(i),convert(j)) + ".");
				}
			}
			break;
		}
	}
	public Boolean NOR(Boolean a, Boolean b){
		Boolean result;
		if (a) {
			result = false;
		} else{
			if (b) {
				result = false;
			} else {
				result = true;
			}
		}
		return result;
	}
}
